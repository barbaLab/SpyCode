function SmoothY = fastsmooth(Y,smoothwidth)%  fastsmooth(Y,w) smooths vector Y by triangular% smooth of width = smoothwidth. Works well with signals up to % 100,000 points in length and smooth widths up to 1000 points. % Faster than tsmooth for smooth widths above 600 points.% Example: fastsmooth([0 0 0 0 9 0 0 0 0],3) yields [0 0 1 2 3 2 1 0 0]%  T. C. O'Haver, 2006.w = round(smoothwidth);SumPoints = sum(Y(1:w));s = zeros(size(Y));halfw = round(w/2);% con questo ciclo for ciascun punto e' la somma di se stesso e dei% (round(w/2)-1) vicini; es. se w = 3, si sommano i 2 vicinifor k = 1:length(Y)-w,   s(k+halfw-1) = SumPoints;   % SumPoints = SumPoints - Y(k) + Y(k+w);   SumPoints = SumPoints-Y(k);   SumPoints = SumPoints+Y(k+w);end% divides all by ws=s./w;% repeats the procedureSumPoints = sum(s(1:w));SmoothY = zeros(size(s));for k = 1:length(s)-w,   SmoothY(k+halfw-1) = SumPoints;   SumPoints = SumPoints-s(k);   SumPoints = SumPoints+s(k+w);endSmoothY = SmoothY./w;% es. se w = 3, equivale a convoluire con un kernel triangolare% SmoothY(3) = 1/9*Y(1)+2/9*Y(2)+3/9*Y(3)+2/9*Y(4)+1/9*Y(5) e cosi' via% NB: se la finestra rettangolare scelta e' 3, la finestra triangolare% diventa 5 e cosi' via